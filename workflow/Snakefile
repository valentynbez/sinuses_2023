import os
import glob

workflow_folder = os.path.dirname(os.path.abspath(workflow.snakefile))
configfile: os.path.join(workflow_folder, "config.yaml")
DATA_DIR = config["RAW_DATA"]
OUT_DIR = config["OUT_FOLDER"]

# taming numpy's OpenBlas for SGE execution
os.environ["OMP_NUM_THREADS"] = "1"
os.environ["OPENBLAS_NUM_THREADS"] = "1"
os.environ["MKL_NUM_THREADS"] = "1"
os.environ["VECLIB_MAXIMUM_THREADS"] = "1"
os.environ["NUMEXPR_NUM_THREADS"] = "1"

# adding vars to a path
# MORGAN
os.environ["PATH"] += os.pathsep + "/bin"
os.environ["PATH"] += os.pathsep + "/nfs/home/vbezshapkin/miniconda3/bin"
# EULER NODE
os.environ["PATH"] += os.pathsep + "/cluster/apps/sfos/bin"
os.environ["PATH"] += os.pathsep + "/cluster/home/vbezshapkin/miniconda3/bin"



forward_reads = glob.glob(f"{DATA_DIR}/*_R1_001.fastq.gz")
sample_names = [x.split("/")[-1].rsplit("_", 2)[0] for x in forward_reads]

rule all:
    input:
        forward_reads = expand(os.path.join(OUT_DIR, "fastp", "{sample}_1.fastq.gz"), sample=sample_names),
        reverse_reads = expand(os.path.join(OUT_DIR, "fastp", "{sample}_2.fastq.gz"), sample=sample_names),
        report =  expand(os.path.join(OUT_DIR, "fastp", "{sample}.html"), sample=sample_names),
        json =  expand(os.path.join(OUT_DIR, "fastp", "{sample}.json"), sample=sample_names)

include: os.path.join(workflow_folder, "rules", "fastp.smk")




